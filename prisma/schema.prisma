// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Your Data Models Go Here

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model Slots {
  id         Int      @id @default(autoincrement())
  name       String?
  slug       String?
  color      String?
  deleted    Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model Categories {
  id               Int      @id @default(autoincrement())
  name             String?
  slug             String   @unique
  description      String?
  subtitle         String?
  background_image String?
  paid             Boolean  @default(false)
  has_levels       Boolean  @default(false)
  deleted          Boolean  @default(false)
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now()) @updatedAt @db.Timestamp(0)
  levels           Levels[]
}

model Levels {
  id               Int           @id @default(autoincrement())
  category_slug    String?
  name             String?
  description      String?
  plays            Int?
  slug             String        @unique
  paid             Boolean       @default(false)
  background_image String?
  deleted          Boolean       @default(false)
  created_at       DateTime      @default(now())
  updated_at       DateTime      @default(now()) @updatedAt @db.Timestamp(0)
  categories       Categories?   @relation(fields: [category_slug], references: [slug])
  music_tracks     MusicTracks[]
}

model MusicTracks {
  id          Int      @id @default(autoincrement())
  level_slug  String?
  name        String?
  description String?
  duration    Int?
  album_art   String?  @default("https://picsum.photos/480")
  media_url   String?
  paid        Boolean  @default(false)
  deleted     Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt @db.Timestamp(0)
  Levels      Levels?  @relation(fields: [level_slug], references: [slug])
}

model YogaCategory {
  id                   Int      @id @default(autoincrement())
  category_name        String
  category_description String   @db.MediumText
  background_image     String?
  paid                 Boolean  @default(false)
  poses                Pose[]
  deleted              Boolean  @default(false)
  created_at           DateTime @default(now())
  updated_at           DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model Pose {
  id              Int          @id @default(autoincrement())
  category_id     Int
  category        YogaCategory @relation(fields: [category_id], references: [id])
  color_code      String?
  dificulty_level String?      @default("Easy")
  tags            Json?        @default("[]")

  english_name          String
  sanskrit_name_adapted String?
  sanskrit_name         String?
  translation_name      String?
  pose_description      String?  @db.MediumText
  pose_benefits         String?  @db.MediumText
  url_svg               String?
  url_png               String?
  url_svg_alt           String?
  carousel              Json?    @default("[]")
  procedure             Json?    @default("[]")
  target_body_parts     Json?    @default("[]")
  benefits              Json?    @default("[]")
  contraindications     Json?    @default("[]")
  yt_videos             Json?    @default("[]")
  deleted               Boolean  @default(false)
  created_at            DateTime @default(now())
  updated_at            DateTime @default(now()) @updatedAt @db.Timestamp(0)
}
